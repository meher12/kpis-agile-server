version: '3.8'
services:
  akk-server:
      image: 'akk-backend:latest'
      container_name: akk-server-container
      ports:
         - "8081:8081"
      build:
         context: .
      restart: on-failure
      depends_on:
         - akk-db
      environment:
            #compose-postgres name db user pass
             - SPRING_DATASOURCE_URL=jdbc:postgresql://akk-db:5432/postgres
             - SPRING_DATASOURCE_USERNAME=postgres
             - SPRING_DATASOURCE_PASSWORD=mypass
        # Hibernate ddl auto (create, create-drop, validate, update)
             - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      networks: # Networks to join (Services on the same network can communicate with each other using their name)
        - akk-network

#Postgres db
  akk-db:
    #image: 'postgres-alpine'
    image: 'postgres:13.1-alpine'
    container_name: akk-db-container
    restart: always
      #build:
    #context: ./db
    #dockerfile: Dockerfile

    #command: docker cp ./db/data/datasqlkpiagile db-kpis-agile:/datasqlkpiagile
    volumes:
      - pg-akk:/var/lib/postgresql/data
      - ./db/dumps07.sql:/docker-entrypoint-initdb.d/0_dumps07.sql

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mypass
    networks:
      - akk-network
#  For production mode
#  pgadmin:
#      container_name: pgadmin
#      image: dpage/pgadmin4
#      environment:
#        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#        PGADMIN_CONFIG_SERVER_MODE: 'False'
#      volumes:
#        - pgadmin:/var/lib/pgadmin
#      ports:
#        - "5050:80"
#      networks:
#        - akk-network
#      restart: unless-stopped

# Fron-end Angular Application
  akk-ui:
    image: 'akk-frontend:latest'
    container_name: akk-ui-container
    build:
         context: ../CICD-UI-AgileKK
         #for production mode
#         context: ../kpis-agile-client

    ports:
      - 4200:80
    depends_on:
         - akk-server
    networks:
      - akk-network

volumes:
  pg-akk:
#  postgres:
  pgadmin:
  
# Networks to be created to facilitate communication between containers
networks:
  akk-network: